"use strict";const contractAbi=[{inputs:[],stateMutability:"nonpayable",type:"constructor"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"user",type:"address"},{indexed:!1,internalType:"uint256",name:"amount",type:"uint256"}],name:"TotalWithdrawn",type:"event"},{inputs:[{internalType:"address",name:"wallet",type:"address"}],name:"getWalletInfo",outputs:[{internalType:"uint256",name:"totalAmount",type:"uint256"},{internalType:"uint256",name:"alreadyWithdrawn",type:"uint256"},{internalType:"uint256",name:"availableToWithdraw",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdrawAll",outputs:[],stateMutability:"nonpayable",type:"function"}],Web3Modal=window.Web3Modal.default,WalletConnectProvider=window.WalletConnectProvider.default,Fortmatic=window.Fortmatic,evmChains=window.evmChains;let web3Modal,web3,contract,provider,selectedAccount,total,withdrawn,available;function addSpaces(e){for(var e=(e+="").split("."),t=e[0],e=1<e.length?"."+e[1]:"",n=/(\d+)(\d{3})/;n.test(t);)t=t.replace(n,"$1 $2");return t+e}function init(){if("http:"!==location.protocol&&"https:"!==location.protocol){const t=document.querySelector("#alert-error-https");return t.style.display="block",void document.querySelector("#btn-connect").setAttribute("disabled","disabled")}var e={walletconnect:{package:WalletConnectProvider,options:{infuraId:"8043bb2cf99347b1bfadfb233c5325c0"}},fortmatic:{package:Fortmatic,options:{key:"pk_test_391E26A3B43A3350"}}};web3Modal=new Web3Modal({cacheProvider:!0,providerOptions:e,disableInjectedProvider:!1,theme:{background:"#161618",main:"#FFFFFF",secondary:"rgba(255, 255, 255, 0.72);",border:"transparent",hover:"rgba(44, 43, 48, 0.48);"}}),web3Modal.cachedProvider&&onConnect()}async function fetchAccountData(){web3=new Web3(provider);var e=await web3.eth.getChainId(),e=(evmChains.getChain(e),await web3.eth.getAccounts());selectedAccount=e[0],contract=new web3.eth.Contract(contractAbi,"0x95a3C00D5d35aC0F125F9782838a086750103C21",{from:selectedAccount}),[...document.querySelectorAll(".selected-account")].map(e=>e.textContent=selectedAccount.substr(0,6)+"..."+selectedAccount.substr(selectedAccount.length-6,selectedAccount.length-1));document.querySelector("#template-balance");try{var{alreadyWithdrawn:t,availableToWithdraw:n,totalAmount:o}=await contract.methods.getWalletInfo(selectedAccount).call();total=(Number(o)/1e18).toFixed(4),withdrawn=(Number(t)/1e18).toFixed(4),available=(Number(n)/1e18).toFixed(4),document.querySelector("#prepare").style.display="none",document.querySelector("#connected").style.display="block",document.querySelector("#total-tokens").textContent=addSpaces(total),document.querySelector("#withdrawn-tokens").textContent=addSpaces(withdrawn),document.querySelector("#available-tokens").textContent=addSpaces(available),document.querySelector("#withdrawn-tokens-percent").textContent=0<t?Math.round(Number(withdrawn)/Number(total)*100):0,document.querySelector("#available-tokens-percent").textContent=0<n?Math.round(Number(available)/Number(total)*100):0,setTimeout(function(){document.querySelector("#withdrawn-tokens-progress").style.width=Math.round(Number(withdrawn)/Number(total)*100)+"%",document.querySelector("#available-tokens-progress").style.width=Math.round(Number(available)/Number(total)*100)+"%"},100),0==available&&disableWithdraw()}catch(e){console.log(e),document.querySelector("#error-modal").style.display="flex",document.body.style.overflow="hidden"}}async function refreshAccountData(){document.querySelector("#connected").style.display="none",document.querySelector("#prepare").style.display="block",document.querySelector("#btn-connect").setAttribute("disabled","disabled"),await fetchAccountData(provider),document.querySelector("#btn-connect").removeAttribute("disabled")}function onAccountClick(){document.querySelector("#wallet-modal").style.display="flex",document.body.style.overflow="hidden"}function disableWithdraw(){document.querySelector("#btn-withdraw").disabled=!0,document.querySelector("#btn-withdraw").style.background="rgba(69, 160, 255, 0.5)",document.querySelector("#btn-withdraw").style.color="rgba(255, 255, 255, 0.5)"}async function onConnect(){try{provider=await web3Modal.connect()}catch(e){return void console.log("Could not get a wallet connection",e)}provider.on("accountsChanged",e=>{fetchAccountData()}),provider.on("chainChanged",e=>{fetchAccountData()}),provider.on("networkChanged",e=>{fetchAccountData()}),await refreshAccountData()}async function onDisconnect(e){e.target.closest(".global-modal").style.display="none",provider.close&&(await provider.close(),provider=null),await web3Modal.clearCachedProvider(),selectedAccount=null,document.querySelector("#prepare").style.display="block",document.querySelector("#connected").style.display="none"}async function onWithdrawClick(e){try{document.querySelector("#loader-modal").style.display="flex",document.body.style.overflow="hidden";await contract.methods.withdrawAll().send();document.querySelector("#withdrawn-tokens").textContent=Number(withdrawn)+Number(available),document.querySelector("#withdrawn-tokens-percent").textContent=Math.round((Number(withdrawn)+Number(available))/Number(total)*100),document.querySelector("#withdrawn-tokens-progress").style.width=Math.round((Number(withdrawn)+Number(available))/Number(total)*100)+"%",document.querySelector("#available-tokens-progress").style.width=0,document.querySelector("#available-tokens").textContent=0,document.querySelector("#available-tokens-percent").textContent=0,disableWithdraw(),document.querySelector("#success-modal").style.display="flex",document.body.style.overflow="hidden"}catch(e){console.log(e),document.querySelector("#error-modal").style.display="flex",document.body.style.overflow="hidden"}document.querySelector("#loader-modal").style.display="none",document.body.style.overflow="auto"}window.addEventListener("load",async()=>{init(),document.querySelector("#btn-connect").addEventListener("click",onConnect),document.querySelector("#btn-disconnect").addEventListener("click",onDisconnect),document.querySelector("#selected-account").addEventListener("click",onAccountClick),document.querySelector("#btn-withdraw").addEventListener("click",onWithdrawClick),[...document.querySelectorAll(".global-modal__close")].map(e=>e.addEventListener("click",e=>{e.target.closest(".global-modal").style.display="none",document.body.style.overflow="auto"})),document.addEventListener("click",e=>{e.target.classList.contains("global-modal")&&!e.target.classList.contains("global-modal--locked")&&(e.target.style.display="none",document.body.style.overflow="auto")})});